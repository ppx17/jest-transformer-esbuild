{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import * as babel from \"@babel/core\";\nimport {\n  AsyncTransformer,\n  SyncTransformer,\n  TransformOptions,\n  TransformedSource,\n  Transformer,\n  TransformerCreator,\n} from \"@jest/transform\";\nimport * as esbuild from \"esbuild\";\nimport { globsToMatcher } from \"jest-util\";\n\nexport interface TransformerConfig {\n  format?: \"esm\" | \"cjs\";\n  hoistMatch?: Array<string>;\n}\n\nexport type EsbuildTransformOptions = TransformOptions<TransformerConfig>;\n\nconst nodeMajorVersion = process.version.match(/^v(\\d+)\\./)?.[1];\n\nconst esbuildOptions: esbuild.TransformOptions = {\n  sourcemap: \"inline\",\n  loader: \"ts\",\n  legalComments: \"inline\",\n  platform: \"node\",\n  target: nodeMajorVersion ? `node${nodeMajorVersion}` : undefined,\n};\n\nconst babelOptions: babel.TransformOptions = {\n  plugins: [\"jest-hoist\"],\n  sourceMaps: \"inline\",\n  configFile: false,\n};\n\nconst handleResult = (\n  esbuildResult: esbuild.TransformResult,\n  babelResult: babel.BabelFileResult | null | undefined\n): TransformedSource => {\n  let result: TransformedSource;\n\n  if (babelResult === undefined) {\n    result = {\n      code: esbuildResult.code,\n      map: esbuildResult.map,\n    };\n  } else if (\n    babelResult === null ||\n    babelResult.code === null ||\n    babelResult.code === undefined\n  ) {\n    throw new Error(`babel transform returned empty result`);\n  } else {\n    result = {\n      code: babelResult.code,\n      map: babelResult.map,\n    };\n  }\n\n  return {\n    code: result.code.replace(/\\/\\*!(\\s*istanbul ignore .*?)\\*\\//, \"/* $1*/\"),\n    map: result.map,\n  };\n};\n\nconst matcher = (path: string, options: EsbuildTransformOptions): boolean =>\n  globsToMatcher(\n    options?.transformerConfig?.hoistMatch || options.config.testMatch\n  )(path);\n\nconst createTransformer: TransformerCreator<\n  Transformer<TransformerConfig>,\n  TransformerConfig\n> = (): SyncTransformer<TransformerConfig> &\n  AsyncTransformer<TransformerConfig> => {\n  return {\n    process(source: string, path: string, options: EsbuildTransformOptions) {\n      const esbuildResult = esbuild.transformSync(source, {\n        ...esbuildOptions,\n        sourcefile: path,\n        format: options?.transformerConfig?.format || \"cjs\",\n      });\n\n      let babelResult: babel.BabelFileResult | null | undefined;\n\n      if (matcher(path, options)) {\n        babelResult = babel.transformSync(esbuildResult.code, babelOptions);\n      }\n\n      return handleResult(esbuildResult, babelResult);\n    },\n\n    async processAsync(\n      source: string,\n      path: string,\n      options: EsbuildTransformOptions\n    ) {\n      const esbuildResult = await esbuild.transform(source, {\n        ...esbuildOptions,\n        sourcefile: path,\n        format: options?.transformerConfig?.format || \"esm\",\n      });\n\n      let babelResult: babel.BabelFileResult | null | undefined;\n\n      if (matcher(path, options)) {\n        babelResult = await babel.transformAsync(\n          esbuildResult.code,\n          babelOptions\n        );\n      }\n\n      return handleResult(esbuildResult, babelResult);\n    },\n  };\n};\n\nexport default { createTransformer };\n"],
  "mappings": "+EAAA,IAAAA,EAAA,UAAYC,MAAW,cASvB,UAAYC,MAAa,UACzB,OAAS,kBAAAC,MAAsB,YAS/B,MAAMC,GAAmBJ,EAAA,QAAQ,QAAQ,MAAM,WAAW,IAAjC,YAAAA,EAAqC,GAExDK,EAA2C,CAC/C,UAAW,SACX,OAAQ,KACR,cAAe,SACf,SAAU,OACV,OAAQD,EAAmB,OAAOA,IAAqB,MACzD,EAEME,EAAuC,CAC3C,QAAS,CAAC,YAAY,EACtB,WAAY,SACZ,WAAY,EACd,EAEMC,EAAeC,EAAA,CACnBC,EACAC,IACsB,CACtB,IAAIC,EAEJ,GAAID,IAAgB,OAClBC,EAAS,CACP,KAAMF,EAAc,KACpB,IAAKA,EAAc,GACrB,MACK,IACLC,IAAgB,MAChBA,EAAY,OAAS,MACrBA,EAAY,OAAS,OAErB,MAAM,IAAI,MAAM,uCAAuC,EAEvDC,EAAS,CACP,KAAMD,EAAY,KAClB,IAAKA,EAAY,GACnB,EAGF,MAAO,CACL,KAAMC,EAAO,KAAK,QAAQ,oCAAqC,SAAS,EACxE,IAAKA,EAAO,GACd,CACF,EA5BqB,gBA8BfC,EAAUJ,EAAA,CAACK,EAAcC,IAA2C,CAjE1E,IAAAd,EAkEE,OAAAG,IACEH,EAAAc,GAAA,YAAAA,EAAS,oBAAT,YAAAd,EAA4B,aAAcc,EAAQ,OAAO,SAC3D,EAAED,CAAI,GAHQ,WAKVE,EAGFP,EAAA,KAEK,CACL,QAAQQ,EAAgBH,EAAcC,EAAkC,CA5E5E,IAAAd,EA6EM,MAAMS,EAAgBP,EAAQ,cAAcc,EAAQ,CAClD,GAAGX,EACH,WAAYQ,EACZ,SAAQb,EAAAc,GAAA,YAAAA,EAAS,oBAAT,YAAAd,EAA4B,SAAU,KAChD,CAAC,EAED,IAAIU,EAEJ,OAAIE,EAAQC,EAAMC,CAAO,IACvBJ,EAAcT,EAAM,cAAcQ,EAAc,KAAMH,CAAY,GAG7DC,EAAaE,EAAeC,CAAW,CAChD,EAEA,MAAM,aACJM,EACAH,EACAC,EACA,CAhGN,IAAAd,EAiGM,MAAMS,EAAgB,MAAMP,EAAQ,UAAUc,EAAQ,CACpD,GAAGX,EACH,WAAYQ,EACZ,SAAQb,EAAAc,GAAA,YAAAA,EAAS,oBAAT,YAAAd,EAA4B,SAAU,KAChD,CAAC,EAED,IAAIU,EAEJ,OAAIE,EAAQC,EAAMC,CAAO,IACvBJ,EAAc,MAAMT,EAAM,eACxBQ,EAAc,KACdH,CACF,GAGKC,EAAaE,EAAeC,CAAW,CAChD,CACF,GAzCE,qBA4CJ,IAAOO,EAAQ,CAAE,kBAAAF,CAAkB",
  "names": ["_a", "babel", "esbuild", "globsToMatcher", "nodeMajorVersion", "esbuildOptions", "babelOptions", "handleResult", "__name", "esbuildResult", "babelResult", "result", "matcher", "path", "options", "createTransformer", "source", "jest_transformer_esbuild_default"]
}
